name: Recipe App Tests

on: [push, pull_request]

jobs:
  api-tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Test Node.js API
      uses: actions/setup-node@v1
      with:
        node-version: 8
    - name: Install Dependencies
      working-directory: ./api
      run: npm ci
    - name: Run Tests
      env:
        accessKeyId: ${{ secrets.AWS_accessKeyId }}
        secretAccessKey: ${{ secrets.AWS_secretAccessKey }}
        region: ${{ secrets.AWS_region }}
      working-directory: ./api
      run: npm test
  client-tests:
    runs-on: ubuntu-latest
    steps:
      - run: echo client tests!
  integration-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || (github.ref == 'refs/heads/master' && github.event_name == 'push')
    needs: [api-tests, client-tests]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Env Vars
        run: |
          echo accessKeyId=${{ secrets.AWS_accessKeyId }} >> .env
          echo secretAccessKey=${{ secrets.AWS_secretAccessKey }} >> .env
          echo region=${{ secrets.AWS_region }} >> .env
          echo NODE_ENV=production >> .env
      - name: Build Client Code
        working-directory: ./client
        run: |
          npm install
          npm run build
          cp -r build/ ../web/
      - name: Run Docker Compose
        run: |
          docker build -t recipe-api ./api
          docker build -t recipe-server ./web
          docker-compose -f docker-compose.yml up -d
  build:
    runs-on: ubuntu-latest
    needs: [api-tests, client-tests, integration-tests]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    env:
      test: test_version
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Version
        run: echo "VERSION=$(date +"%Y.%m.%d")-$(echo $GITHUB_SHA | cut -c 1-7)" >> $GITHUB_ENV
      - name: Setup buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: chrisbombino
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build API Image
        uses: docker/build-push-action@v2
        with:
          tags: chrisbombino/recipe-api:latest,chrisbombino/recipe-api:${{env.VERSION}}
          file: ./api/Dockerfile
          context: ./api
          push: true
      - name: Create Client Production Build
        working-directory: ./client
        run: |
          npm install
          npm run build
          cp -r build/ ../web/
      - name: Build Web Image
        uses: docker/build-push-action@v2
        with:
          tags: chrisbombino/recipe-server:latest,chrisbombino/recipe-server:${{env.VERSION}}
          file: ./web/Dockerfile
          context: ./web
          push: true
  deploy:
    runs-on: ubuntu-latest
    needs: [api-tests, client-tests, integration-tests]
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - run: echo deploying code!!
